[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''    
  let g:quickrun_config = get(g:, 'quickrun_config', {})
  let g:quickrun_config._ = {
      \ 'outputter' : 'error',
      \ 'outputter/error/success' : 'buffer',
      \ 'outputter/error/error'   : 'quickfix',
      \ 'outputter/buffer/split'  : 'vertical',
      \ 'outputter/buffer/close_on_empty' : 1,
      \ 'hook/time/enable' : 1,
      \}
  set splitright
  let g:quickrun_no_default_key_mappings = 1
  nnoremap \r :cclose<CR>:write<CR>:QuickRun -mode n<CR>
  xnoremap \r :<C-U>cclose<CR>:write<CR>gv:QuickRun -mode v<CR>
  nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
  nnoremap <Leader>q :<C-u>bw! \[quickrun\ output\]<CR>

'''

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'Shougo/unite.vim'
hook_add = '''
  let g:unite_enable_start_insert=1
  noremap <C-P> :Unite buffer<CR>
  noremap <C-N> :Unite -buffer-name=file file<CR>
  noremap <C-Z> :Unite file_mru<CR>
  noremap :uff :<C-u>UniteWithBufferDir file -buffer-name=file<CR>
  au FileType unite nnoremap <silent> <buffer> <expr> <C-J> unite#do_action('split')
  au FileType unite inoremap <silent> <buffer> <expr> <C-J> unite#do_action('split')
  au FileType unite nnoremap <silent> <buffer> <expr> <C-K> unite#do_action('vsplit')
  au FileType unite inoremap <silent> <buffer> <expr> <C-K> unite#do_action('vsplit')
  au FileType unite nnoremap <silent> <buffer> <ESC><ESC> :q<CR>
  au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>:q<CR>
'''
[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  let g:neosnippet#snippets_directory = '~/.config/nvim/snippets'
'''
[[plugins]]
repo = 'Shougo/neosnippet-snippets'
