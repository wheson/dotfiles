snippet kyoupro
        #include <iostream>
        #include <cmath>
        #include <vector>
        #include <string>
        #include <map>
        #include <algorithm>
        #include <tuple>
        #include <set>
        #include <stack>
        #include <queue>
        #define REP(i, n) for(LL i = 0;i < n;i++)
        #define REPR(i, n) for(LL i = n;i >= 0;i--)
        #define FOR(i, m, n) for(LL i = m;i < n;i++)
        #define FORR(i, m, n) for(LL i = m;i >= n;i--)
        #define SORT(v, n) sort(v, v+n);
        #define VSORT(v) sort(v.begin(), v.end());
        #define pb(a) push_back(a)
        #define INF 999999999
        #define MOD 1000000007
        using namespace std;
        typedef long long LL;
        typedef pair<int, int> P;
        typedef pair<LL, LL> LP;
        typedef pair<int, P> PP;
        typedef pair<LL, LP> LPP;
        int dy[]={0, 0, 1, -1, 0};
        int dx[]={1, -1, 0, 0, 0};
        
        // LL を使う場合はコメントアウト
        typedef LL int;

        int main(){
                ${1}
        }

snippet eratos
        // maxまでの素数をvectorに入れて返す
        vector<LL> eratos(LL max){
            vector<LL> primeVec;
            vector<bool> isprime;
            double sqrtmax = sqrt(max);
            isprime.resize(max + 1);
            isprime[0] = false; isprime[1] = false;
            FOR(i, 2, max + 1){
                isprime[i] = true;
            }
            FOR(i, 2, sqrtmax){
                if(isprime[i]){
                    for(int j = 0; i * (j + 2) < max + 1; ++j){
                        isprime[i * (j + 2)] = false;
                    }
                }
            }
            REP(i, max + 1){
                if(isprime[i])  primeVec.pb(i);
            }
            return primeVec;
        } 
